//ASYNC FILE SYSTEM
readFile or writeFile both take the address of the file you want to read or new address you want to write in.
they both take "utf8"( This is the meaning of “UTF”, or “Unicode Transformation Format.”) as their second argument.
and lastly a callback function with two parameters (err, result)

//SYNC FILE SYSTEM
readFileSync or writeFileSync both take the address of the file you want to read or new address you want to write in.
they both take "utf8"( This is the meaning of “UTF”, or “Unicode Transformation Format.”) as their second argument.
writeFileSync can also take {flag: 'a'} as the third parameter to concatinate.

//http request 
after require.
we can create server using http.createServer which takes a call back funtion that has two parameters req and res.
adding '.listen(5000)' will give where the server should run locally.
res.write('sdfew') can be use to pring on the browser which usually comes with res.end()


// PACKAGE.JSON 
package.json tells stores information about the project(i.e you see numbers of dependencies you have)

//PACKAGE-LOCK.JSON 
There we have all the versions for the dependencies and other packages.

// Installing globally 
npm install -g <package-name>

//EVENT LOOP

(function() {

  console.log('this is the start');

  setTimeout(function cb() {
    console.log('Callback 1: this is a msg from call back');
  }); // has a default time value of 0

  console.log('this is just a message');

  setTimeout(function cb1() {
    console.log('Callback 2: this is a msg from call back');
  }, 0);

  console.log('this is the end');

})();

// "this is the start"
// "this is just a message"
// "this is the end"
// "Callback 1: this is a msg from call back"
// "Callback 2: this is a msg from call back"
